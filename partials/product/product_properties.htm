{# @var obProduct \Lovata\Shopaholic\Classes\Item\ProductItem #}

{# Render product properties #}
{# Get property groups #}
{% set obGroupList = obProduct.property.getGroupList().sort() %}

{# Get property collection, apply sorting and filters by active #}
{% set obPropertyList = obProduct.property.active().sort() %}

{% if obGroupList.isNotEmpty() %}
    <dl class="uk-description-list uk-width-1-2">
        {% for obGroup in obGroupList %}
            {# Get property collection, apply filters by group #}
            {% set obGroupPropertyList = obPropertyList.group(obGroup.id) %}
            {% if obGroupPropertyList.isNotEmpty() %}
                <dt>{{ obGroup.name }}</dt>
                <dd>
                    <ul class="uk-list ">
                        {% for obProperty in obGroupPropertyList %}
                            {% if obProperty.hasValue() %}
                                <li>
                                    <div class="uk-grid-small" uk-grid>
                                        <div class="uk-width-expand" uk-leader>{{ obProperty.name }}
                                            {% if obProperty.description is not empty %}
                                                <span uk-icon="icon: question; ratio: 0.8" title="{{ obProperty.description }}" uk-tooltip></span>
                                            {% endif %}
                                        </div>
                                        <div>{{ obProperty.property_value.getValueString() }} {{ obProperty.measure.name }}</div>
                                    </div>
                                </li>
                            {% endif %}
                        {% endfor %}
                    </ul>
                </dd>
            {% endif %}
        {% endfor %}
    </dl>
{% endif %}
